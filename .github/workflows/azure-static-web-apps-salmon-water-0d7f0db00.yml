name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
        id-token: write
        contents: read
    # --- Job-level Environment Variables ---
    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile
      BUNDLE_PATH: ${{ github.workspace }}/vendor/bundle
      JEKYLL_ENV: production # Good practice for production builds
    # ------------------------------------------
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7' # Your confirmed local Ruby version
          bundler-version: '2.3.7' # Your confirmed Bundler version

      - name: Install dependencies and build Jekyll site
        run: |
          # These commands automatically use BUNDLE_GEMFILE and BUNDLE_PATH
          # set as job-level environment variables.
          bundle clean --force           # Clean up any old or unused gems
          bundle install --jobs 4 --retry 3 # Install gems
          
          # DEBUGGING: Check if the Jekyll build.rb file exists AFTER install
          ls -l ${{ github.workspace }}/vendor/bundle/ruby/2.7.0/gems/jekyll-4.3.4/lib/jekyll/commands/build.rb
          
          bundle exec jekyll build       # Build Jekyll

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_SALMON_WATER_0D7F0DB00 }}
          action: "upload"
          app_location: "/"
          api_location: ""
          output_location: "_site"
          # github_id_token is not usually needed here if you have the API token
          # Remove this line: github_id_token: ${{ steps.idtoken.outputs.result }}
          # if you removed the Get Id Token step.
          # We're relying on the azure_static_web_apps_api_token.

close_pull_request_job:
  if: github.event_name == 'pull_request' && github.event.action == 'closed'
  runs-on: ubuntu-latest
  name: Close Pull Request Job
  steps:
    - name: Close Pull Request
      id: closepullrequest
      uses: Azure/static-web-apps-deploy@v1
      with:
        action: "close"
