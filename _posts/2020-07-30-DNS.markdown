---
Title:  "DNS"
#excerpt: "The resolution to this problem for me was to ensure that an SPNameQualifier value was sent as a claim property from AD FS to IdentityNow."
date:   "2020-08-01"
categories: 
- "DNS Records"
tags: "DNS"
---
This blog is all about DNS. I'm sure most of the IT people will know what DNS is. Especially if you're an Infrastructure guy i'm sure you know what i'm talking. 
I've been to a client who had massive DNS records & I've been tasked to remediate the DNS records, being a maasive organization my client had n-number of DNS records. 
My initial thought's were like how do i do that. So, i've formulated the following 3-step process. 

1. **Discover**.
2. **Test**.
3. **Remediate**.

1._**Discover**_

```powershell
#This Script gives information about the DFS Namespaces, Foldertargets and it will check if the folder path is valid or not. 
$DFS = Get-Dfsnroot
#The above command gives information about DFS root. 
$a = @()
$i = 1
$count = $dfs.count
```
The above is a test to see how to split the code

```powershell
Foreach ($obj in $dfs)
{
  Write-Progress -Activity "Getting DFS info of $($obj.path)" -Status "$i of $count" -PercentComplete ($i/$count*100)
    $folder = Get-dfsnfolder -path "$($obj.path)\*" | Select path, State -ErrorAction Stop
    #The above command gives folder information for the root paths. 
    Foreach ($name in $folder)
    {
        $target = Get-dfsnfoldertarget -path $($name.path) | Select TargetPath -ErrorAction Stop
        #The above command gives folder target path for each of the folder in the DFS folder. 
        Foreach ($tar in $target)
        {
            $record = New-Object psobject 
            $record | Add-Member -Type NoteProperty -Name "Root" -Value $obj.path
            $record | Add-Member -Type NoteProperty -Name "Namespace" -Value $name.path
            $record | Add-Member -Type NoteProperty -Name "TargetFolder" -Value $target.Targetpath
            $record | Add-Member -Type NoteProperty -Name "State" -Value $name.state
            Try
                {
                    $testing = Test-Path -Path $($tar.Targetpath) -ErrorAction Stop
                    #The above Command tests if the folder target path is valid or not. 
                    $record | Add-Member -Type NoteProperty -Name "ValidPath" -Value $testing
                }
            catch
                {
                    $temp = $error[0].exception.message
                    $record | Add-Member -Type NoteProperty -Name "ValidPath" -Value $temp
                } #End of try and Catch Statements
            $a += $record
        } #End of foreach loop for DFS Folder Target path 
    } #End of foreach loop for DFS Folder path. 
    $i++
} #End of Script. 
$filepath = "DFSScanresults" + (Get-date -Format "dd-MM-yyyy") + ".csv"
#Creating path for exporting the results. 
$a | Export-Csv -Path $filepath -NoTypeInformation
```
This is a Test code